@model List<TNS.Models.Product>

@{
    ViewBag.Title = "Danh sách sản phẩm";
}

@Styles.Render("~/Areas/Admin/Content/css/tabulator.min.css")

<div class="main__content">
    <h3 class="main__content__header">Danh sách sản phẩm</h3>
    <div id="product-table"></div>
</div>

@Scripts.Render("~/Areas/Admin/Scripts/axios.min.js")
@Scripts.Render("~/Areas/Admin/Scripts/tabulator.min.js")
<script>
    document.addEventListener('DOMContentLoaded', () => {
        axios.get('http://localhost:5000/products')
            .then(res => {
                const tabledata = res.data
                    .map(item => {
                        item.images = item.images[0];
                        return item;
                    });

                const table = new Tabulator('#product-table', {
                    data: tabledata,
                    layout: 'fitColumns',
                    tooltips: true,
                    pagination: 'local',
                    paginationSize: 10,
                    movableColumns: true,
                    resizableRows: true,
                    initialSort: [{ column: 'name', dir: 'asc' }],
                    rowClick: function (e, row) {
                        location.href = '/Admin/ProductManager/Edit/' + row._row.data._id;
                    },
                    columns: [
                        {
                            title: 'Hình ảnh',
                            field: 'images',
                            width: 120,
                            formatter: 'image',
                            formatterParams: {
                                height: '10rem',
                                width: '10rem',
                            },
                        },
                        {
                            title: 'Tên sản phẩm',
                            field: 'title',
                            width: '700',
                            formatter: function (cell) {
                                return `<span style="font-weight: 700; color: var(--clr-denim-500)">${cell.getValue()}</span>`;
                            },
                        },
                        {
                            title: 'Giá gốc',
                            field: 'price',
                            width: 150,
                            formatter: 'money',
                            formatterParams: {
                                decimal: '.',
                                thousand: ',',
                                symbol: ' đ',
                                symbolAfter: 'p',
                                precision: false,
                            },
                        },
                        {
                            title: 'Giảm giá (%)',
                            field: 'discount_percent',
                            width: 150,
                        },
                        {
                            title: 'Trạng thái',
                            field: 'status',
                            width: 120,
                        },
                        {
                            title: 'Số lượng tồn kho',
                            field: 'in_stock',
                            width: 200,
                        },
                    ],
                });
            })
            .catch(console.err);
    })
</script>